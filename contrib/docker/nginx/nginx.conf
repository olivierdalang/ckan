# NOTE : $VARIABLES are env variables replaced by entrypoint.sh using envsubst
# not to be mistaken for nginx variables (also starting with $, but usually lowercase)

events {

}

http{

    resolver 127.0.0.11;

    # Default server on port 80 redirects to HTTPS (except for certbot challenge)
    server {
        listen 80 default_server;

        # Except for let's encrypt challenge
        location /.well-known {
            alias /challenges/.well-known;
            include  /etc/nginx/mime.types;
        }

        # Redirect to https
        location / {
            return 302 https://$host$request_uri; # TODO : we should use 301 (permanent redirect, but not practical for debug)
        }
    }


    # Default server on port 443 proxies to CKAN
    server {
        listen          443 ssl default_server;

        ssl_certificate     /certs/cert.pem;
        ssl_certificate_key /certs/privkey.pem;

        # This is the main conf
        charset     utf-8;

        # max upload size
        client_max_body_size 100G;

        # compression
        gzip on;
        gzip_proxied any;
        gzip_types
            text/css
            text/javascript
            text/xml
            text/plain
            application/javascript
            application/x-javascript
            application/json;

        # disabled, we use the default http://tiles.rdnt.io/ for now
        # # Our own marblecutter
        # location ~ ^/(preview|tiles|bounds) {
        #
        #     # Using a variable is a trick to let Nginx start even if upstream host is not up yet
        #     # (see https://sandro-keil.de/blog/2017/07/24/let-nginx-start-if-upstream-host-is-unavailable-or-down/)
        #     set $marblecutter marblecutter:8000;
        #
        #     proxy_pass        http://$marblecutter;
        #     proxy_set_header  Host  $host;
        #     proxy_set_header  X-Forwarded-For $remote_addr;
        #
        #     # uwsgi_params
        #     include /etc/nginx/uwsgi_params;
        # }

        # Directly serve downloads from nginx
        location ~ "/dataset/[^/]+/resource/([^/]{3})([^/]{3})([^/]+)/download/.*" {
          alias /ckan_storage/resources/$1/$2/$3;
        }

        location / {

            # Using a variable is a trick to let Nginx start even if upstream host is not up yet
            # (see https://sandro-keil.de/blog/2017/07/24/let-nginx-start-if-upstream-host-is-unavailable-or-down/)
            set $upstream ckan:5000;

            proxy_pass        http://$upstream;
            proxy_read_timeout  300s;
            proxy_set_header  Host  $host;
            proxy_set_header  X-Forwarded-For $remote_addr;

            # uwsgi_params
            include /etc/nginx/uwsgi_params;
        }

    }

}
