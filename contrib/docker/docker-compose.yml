# docker-compose build && docker-compose up -d
# If "docker-compose logs ckan" shows DB not ready, run "docker-compose restart ckan" a few times.
version: "3"

volumes:
  ckan_home:
  ckan_storage:
  pg_data:
  pgdumps:
  certs:
  challenges:

services:
  ckan:
    container_name: ckan
    build:
      context: ../../
      args:
          - CKAN_SITE_URL=${CKAN_SITE_URL}
    links:
      - db
      - solr
      - redis
    restart: unless-stopped
    environment:
      # Defaults work with linked containers, change to use own Postgres, SolR, Redis or Datapusher
      - CKAN_SQLALCHEMY_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/ckan
      - CKAN_DATASTORE_WRITE_URL=postgresql://ckan:${POSTGRES_PASSWORD}@db/datastore
      - CKAN_DATASTORE_READ_URL=postgresql://datastore_ro:${DATASTORE_READONLY_PASSWORD}@db/datastore
      - CKAN_SOLR_URL=http://solr:8983/solr/ckan
      - CKAN_REDIS_URL=redis://redis:6379/1
      - CKAN_DATAPUSHER_URL=http://datapusher:8800
      - CKAN_SITE_URL=${CKAN_SITE_URL}
      - CKAN_MAX_UPLOAD_SIZE_MB=${CKAN_MAX_UPLOAD_SIZE_MB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}

    volumes:
      - ../../docker_conf:/etc/ckan
      - ckan_home:/usr/lib/ckan
      - ckan_storage:/var/lib/ckan

  datapusher:
    container_name: datapusher
    image: clementmouchet/datapusher
    restart: unless-stopped
    ports:
      - "8800:8800"

  db:
    container_name: db
    build:
      context: ../../
      dockerfile: contrib/docker/postgresql/Dockerfile
      args:
        - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    restart: unless-stopped
    environment:
      - DS_RO_PASS=${DATASTORE_READONLY_PASSWORD}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data

  solr:
    container_name: solr
    build:
      context: ../../
      dockerfile: contrib/docker/solr/Dockerfile
    restart: unless-stopped

  redis:
    container_name: redis
    image: redis:latest
    restart: unless-stopped

  nginx:
    container_name: nginx
    build:
      context: ./nginx/
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - certs:/certs/
      - challenges:/challenges/

  certbot:
    image: olivierdalang/certbot:0.0.2
    restart: unless-stopped
    environment:
      - EMAIL=olivier.dalang@gmail.com
      - DOMAIN=ckan.urbasen.org
      - STAGING=${CERTBOT_STAGING}
      - HOOK=docker restart nginx
    volumes:
      - certs:/etc/letsencrypt
      - challenges:/challenges
      - /var/run/docker.sock:/var/run/docker.sock

  # Dumps database for backups
  pgdumper:
    image: olivierdalang/pgdumper:0.0.1
    volumes:
      - pgdumps:/pgdumps/
    environment:
      - HOSTNAME=db
      - USERNAME=ckan
      - PGPASSWORD=${POSTGRES_PASSWORD}
    restart: always

  # Backups
  backup:
    image: olivierdalang/rclone-cron:1.48.0-r1
    environment:
      - CRON_SCHEDULE=0 * * * *
      - COMMAND=rclone sync -v /backups MYDROPBOX:${BACKUP_DESTINATION_PATH}
      - RCLONE_CONFIG_MYDROPBOX_TYPE=dropbox
      - RCLONE_CONFIG_MYDROPBOX_CLIENT_ID=${BACKUP_CLIENT_ID}
      - RCLONE_CONFIG_MYDROPBOX_CLIENT_SECRET=${BACKUP_CLIENT_SECRET}
      - RCLONE_CONFIG_MYDROPBOX_TOKEN=${BACKUP_TOKEN}
    volumes:
      - pgdumps:/backups/pgdumps/
      - ckan_storage:/backups/ckan_storage/
    restart: always

